{"version":3,"sources":["component/Page.js","component/ButtonCircularProgress.js","views/pages/Gallery/Details.js"],"names":["Page","props","title","children","withStyles","theme","circularProgress","color","padingRight","withTheme","size","classes","display","pl","thickness","className","useStyles","makeStyles","Padding_Top","paddingTop","backgroundColor","filterbox","flesWarp","minWidth","boxShadow","border","padding","margin","transition","transform","fontSize","paddingBottom","boxheading","marginBottom","borderRadius","marginTop","fontWeight","boxheading1","dialoginputbox","width","height","paddingLeft","deatailimage","overflow","position","background","textAlign","justifyContent","breakpoints","down","filter","maxHeight","maxWidth","Gallery","useWeb3React","account","library","chainId","React","useState","open","setOpen","nftDetails","setnftDetails","user","useContext","UserContext","isLoading","setIsLoading","ownerOf","setOwnerOf","location","useLocation","isUpdate","setIsUpdate","transferAddress","setTransferAddress","handleClose","getDetails","id","a","getWeb3ContractObject","RezwanPodABI","mintAddress","contract","methods","toString","call","ownerOf_L","tokenURI","axios","get","res","status","nfdData","data","console","log","transferFromHandler","ACTIVE_NETWORK","getWeb3Obj","web3","utils","isAddress","getContract","transferFrom","wait","toast","success","getCurrentMintingDetails","error","message","swichNetworkHandler","useEffect","search","ids","split","alignItems","variant","align","style","src","image","alt","mb","container","spacing","item","xs","md","name","wordBreak","toLowerCase","lineHeight","onClick","e","attributes","map","i","trait_type","value","aria-labelledby","aria-describedby","for","type","placeholder","disabled","onChange","target","autoFocus"],"mappings":"sJAAA,+DAEe,SAASA,EAAKC,GAC3B,IAAQC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SAEf,OACE,oCACE,kBAAC,IAAD,KACE,+BAAQD,IAEV,6BAAMC,M,iCCVZ,8CA6BeC,iBAzBA,SAACC,GAAD,MAAY,CACzBC,iBAAkB,CAChBC,MAAO,OACPC,YAAa,WAsBiB,CAAEC,WAAW,GAAhCL,EAlBf,SAAgCH,GAC9B,IAAQS,EAAkBT,EAAlBS,KAAMC,EAAYV,EAAZU,QACd,OACE,kBAAC,IAAD,CAAKJ,MAAM,iBAAiBK,QAAQ,OAAOC,GAAI,GAC7C,kBAAC,IAAD,CACEH,KAAMA,GAAc,GACpBI,UAAWJ,EAAQA,EAAO,EAAK,GAAK,EACpCK,UAAWJ,EAAQL,wB,6SCYrBU,EAAYC,aAAW,SAACZ,GAAD,YAAY,CACvCa,YAAa,CACXC,WAAY,OACZC,gBAAiB,OACjB,OAAQ,CACNb,MAAO,YAGXc,UAAW,CACTT,QAAS,eACTU,SAAU,OACVC,SAAU,OACVC,UAAW,gCACXC,OAAQ,iBACRC,QAAS,OACTC,OAAQ,WACRC,WAAY,OACZ,UAAW,CACTC,UAAW,qBAEb,UAAW,CACTC,SAAU,OACVC,cAAe,EACfxB,MAAO,WAET,MAAO,CACLA,MAAO,UAGXyB,WAAY,CACV,OAAQ,CACNF,SAAU,OACVC,cAAe,EACfxB,MAAO,UACP0B,aAAc,QAEhB,SAAU,CAERrB,QAAS,gBACTc,QAAS,OACTQ,aAAc,MACdC,UAAW,OACX5B,MAAO,UACP6B,WAAY,QAIhBC,YAAa,CACXzB,QAAS,gBACTc,QAAS,OACTQ,aAAc,MACdC,UAAW,OACX5B,MAAO,UACP6B,WAAY,OAGdE,eAAgB,CACdC,MAAO,QACPC,OAAQ,OACRf,OAAQ,oBACRgB,YAAa,OACbrB,gBAAiB,mBACjBc,aAAc,MACd,4BAA6B,CAC3BK,MAAO,UAIXG,cAAY,GACVH,MAAO,OACPC,OAAQ,OACR5B,QAAS,OACTc,QAAS,SACTiB,SAAU,SACVC,SAAU,WACVC,WAAY,yBACZC,UAAW,SACXC,eAAgB,UATN,cAUT1C,EAAM2C,YAAYC,KAAK,MAAQ,CAC9BT,OAAQ,SAXA,cAaV,QAAS,CACPU,OAAQ,kDACRC,UAAW,OACXjB,aAAc,OACdkB,SAAU,SAjBF,OA6PCC,UAxOf,SAAiBpD,GAAQ,IAAD,QACtB,EAAsCqD,cAA9BC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,QAC1B,EAAwBC,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACMlD,EAAUK,IAChB,EAAoC2C,qBAApC,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAAOC,qBAAWC,KACxB,EAAkCP,oBAAS,GAA3C,mBAAOQ,EAAP,KAAkBC,EAAlB,KACA,EAA8BT,mBAAS,IAAvC,mBAAOU,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,cACjB,GAAgCb,oBAAS,GAAzC,qBAAOc,GAAP,MAAiBC,GAAjB,MACA,GAA8Cf,mBAAS,IAAvD,qBAAOgB,GAAP,MAAwBC,GAAxB,MACMC,GAAc,WAClBhB,GAAQ,IAEJiB,GAAU,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACjBZ,GAAa,GADI,kBAGQa,YAAsBC,EAAcC,KAH5C,cAGTC,EAHS,gBAKSA,EAASC,QAAQhB,QAAQU,EAAGO,YAAYC,OALjD,cAKTC,EALS,OAMflB,EAAWkB,GANI,UAQMJ,EAASC,QAAQI,SAASV,EAAGO,YAAYC,OAR/C,eAQTrC,EARS,iBASGwC,IAAMC,IAAIzC,GATb,QAWI,OAFb0C,EATS,QAWPC,SACN9B,EAAc,CAAEgB,GAAIA,EAAGO,WAAYQ,QAASF,EAAIG,OAChDC,QAAQC,IAAI,YAAaL,EAAIG,MAC7B3B,GAAa,IAdA,kDAiBf4B,QAAQC,IAAI,QAAZ,MACA7B,GAAa,GAlBE,0DAAH,sDAqBV8B,GAAmB,uCAAG,gCAAAlB,EAAA,yDACtBvB,IAAY0C,IADU,qBAEpBxB,IAAuC,KAApBA,GAFC,iCAGHyB,cAHG,UAGhBC,EAHgB,QAINA,EAAKC,MAAMC,UAAU5B,IAJf,iCAOlBD,IAAY,GACNU,EAAWoB,YACfrB,IACAD,EACA1B,EACAD,GAZgB,UAeA6B,EAASqB,aACzBlD,EACAoB,GACAb,EAAWiB,IAlBK,eAeZa,EAfY,iBAoBZA,EAAIc,OApBQ,QAqBlBC,IAAMC,QAAQ,WACdlC,IAAY,GACZI,GAAWhB,EAAWiB,IACtBf,EAAK6C,2BACLhC,KAzBkB,kDA2BlBH,IAAY,GAEZiC,IAAMG,MAAM,KAAMC,SAClBf,QAAQC,IAAI,QAAZ,MA9BkB,gCAiCpBU,IAAMG,MAAM,8BAjCQ,gCAoCtBH,IAAMG,MAAM,wBApCU,gCAuCxBE,cAvCwB,0DAAH,qDAkDzB,OARAC,qBAAU,WACR,GAAI1C,EAAS2C,OAAQ,CACnB,IAAMC,EAAM5C,EAAS2C,OAAOE,MAAM,KAC9BD,EAAI,IACNrC,GAAWqC,EAAI,OAGlB,CAAC5C,IAEF,kBAAC,IAAD,CAAMrE,MAAM,qDAGTiE,EACC,kBAAC,IAAD,CACEvD,QAAQ,OACRyG,WAAW,SACXtE,eAAe,SACfR,MAAM,QAEN,kBAAC,IAAD,CAAY+E,QAAQ,KAAKC,MAAM,SAASC,MAAO,CAAEjH,MAAO,SAAxD,cAGA,kBAAC,IAAD,OAGF,oCACE,kBAAC,IAAD,CAAKQ,UAAWJ,EAAQ+B,cACtB,yBACE+E,KACY,OAAV3D,QAAU,IAAVA,GAAA,UAAAA,EAAYgC,eAAZ,eAAqB4B,OAArB,OACI5D,QADJ,IACIA,OADJ,EACIA,EAAYgC,QAAQ4B,MACpB,uBAENC,IAAI,MAGR,kBAAC,IAAD,CAAK5G,UAAWJ,EAAQO,YAAa0G,GAAI,GACvC,kBAAC,IAAD,CAAWxE,SAAS,MAClB,kBAAC,IAAD,CAAMyE,WAAS,EAACC,QAAS,GACvB,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC,IAAD,CAAKlH,UAAWJ,EAAQqB,YACtB,kBAAC,IAAD,CAAYsF,QAAQ,MAApB,KACc,OAAVxD,QAAU,IAAVA,OAAA,EAAAA,EAAYiB,IAAZ,OAAiBjB,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAYiB,GAAK,GADtC,KAC4C,KAC/B,OAAVjB,QAAU,IAAVA,GAAA,UAAAA,EAAYgC,eAAZ,eAAqBoC,MAArB,OACGpE,QADH,IACGA,GADH,UACGA,EAAYgC,eADf,aACG,EAAqBoC,KACrB,GAAI,KAEV,kBAAC,IAAD,CACEZ,QAAQ,QACRE,MAAO,CAAEW,UAAW,YAAa5H,MAAO,YAExC,8CACC8D,GAAoB,IAGtBA,GACCd,GACAA,EAAQ6E,gBAAkB/D,EAAQ+D,eAChC,kBAAC,IAAD,CAAKrH,UAAWJ,EAAQ0B,aACtB,kBAAC,IAAD,CACEmF,MAAO,CACLa,WAAY,OACZ5G,OAAQ,OACRS,aAAc,QAEhBnB,UAAWJ,EAAQU,UACnBiG,QAAQ,YACR5G,KAAK,QACLH,MAAM,YACN+H,QAAS,SAACC,GAAD,OAAO1E,GAAQ,KAExB,8CAOZ,kBAAC,IAAD,CAAMkE,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC,IAAD,CAAKlH,UAAWJ,EAAQqB,YACtB,kBAAC,IAAD,CAAYsF,QAAQ,MAApB,YADF,OAEGxD,QAFH,IAEGA,GAFH,UAEGA,EAAYgC,eAFf,aAEG,EAAqB0C,WAAWC,KAAI,SAAC1C,EAAM2C,GAC1C,OACE,kBAAC,IAAD,CAAK3H,UAAWJ,EAAQU,WACtB,gCACO,OAAJ0E,QAAI,IAAJA,OAAA,EAAAA,EAAM4C,YAAN,OAAmB5C,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAM4C,WAAa,IAEzC,kBAAC,IAAD,CAAYrB,QAAQ,UACb,OAAJvB,QAAI,IAAJA,OAAA,EAAAA,EAAM6C,OAAN,OAAc7C,QAAd,IAAcA,OAAd,EAAcA,EAAM6C,MAAQ,WAS3C,kBAAC,IAAD,CACEpB,MAAO,CAAE3E,WAAY,uBACrBe,KAAMA,EAENiF,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAAC,IAAD,CAAa/D,GAAG,uBAIhB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEA,GAAG,2BACHyC,MAAO,CAAEpE,SAAU,UAEnB,2BAAOoE,MAAO,CAAEjH,MAAO,QAAUwI,IAAI,SAArC,sBACsB,KAGtB,2BACEhI,UAAWJ,EAAQ2B,eACnB0G,KAAK,OACLC,YAAY,UACZL,MAAOjE,GACPuE,SAAUzE,GACV0E,SAAU,SAACZ,GAAD,OAAO3D,GAAmB2D,EAAEa,OAAOR,YAInD,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEpB,MAAO,CAAEjH,MAAO,QAChB+H,QAASzD,GACTwE,WAAS,EACTH,SAAUzE,IAJZ,UASA,kBAAC,IAAD,CACE6D,QAASpC,GACTmD,WAAS,EACTH,SAAUzE,IAAgC,KAApBE,IAHxB,YAKYF,IAAY,kBAAC,IAAD","file":"static/js/9.45e117fc.chunk.js","sourcesContent":["import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nexport default function Page(props) {\n  const { title, children } = props;\n\n  return (\n    <>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <div>{children}</div>\n    </>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CircularProgress, Box, withStyles } from \"@material-ui/core\";\n\nconst styles = (theme) => ({\n  circularProgress: {\n    color: \"#fff\",\n    padingRight: \"50px\",\n  },\n});\n\nfunction ButtonCircularProgress(props) {\n  const { size, classes } = props;\n  return (\n    <Box color=\"secondary.main\" display=\"flex\" pl={7}>\n      <CircularProgress\n        size={size ? size : 30}\n        thickness={size ? (size / 5) * 30 : 5}\n        className={classes.circularProgress}\n      />\n    </Box>\n  );\n}\n\nButtonCircularProgress.propTypes = {\n  size: PropTypes.number,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ButtonCircularProgress);\n","import React, { useState, useEffect, useContext } from 'react'\nimport {\n  Box,\n  Container,\n  Typography,\n  makeStyles,\n  Grid,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n} from '@material-ui/core'\nimport Page from 'src/component/Page'\nimport { useWeb3React } from '@web3-react/core'\nimport { UserContext } from 'src/context/User'\nimport { useLocation } from 'react-router-dom'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { toast } from 'react-toastify'\nimport { mintAddress, ACTIVE_NETWORK } from 'src/constants'\nimport RezwanPodABI from 'src/constants/ABI/RezwanPodABI.json'\nimport axios from 'axios'\nimport {\n  getWeb3Obj,\n  getContract,\n  swichNetworkHandler,\n  getWeb3ContractObject,\n} from 'src/utils'\nimport ButtonCircularProgress from 'src/component/ButtonCircularProgress'\nconst useStyles = makeStyles((theme) => ({\n  Padding_Top: {\n    paddingTop: '50px',\n    backgroundColor: '#000',\n    '& h3': {\n      color: '#00ffff',\n    },\n  },\n  filterbox: {\n    display: 'inline-block',\n    flesWarp: 'warp',\n    minWidth: '90px',\n    boxShadow: 'rgb(0 0 0 / 13%) 0px 5px 15px',\n    border: '1px solid #ccc',\n    padding: '10px',\n    margin: '10px 5px',\n    transition: ' 02s',\n    '&:hover': {\n      transform: 'translateY(-10px)',\n    },\n    '& label': {\n      fontSize: '15px',\n      paddingBottom: 0,\n      color: '#00ffff',\n    },\n    '& p': {\n      color: 'white',\n    },\n  },\n  boxheading: {\n    '& h3': {\n      fontSize: '30px',\n      paddingBottom: 0,\n      color: '#00ffff',\n      marginBottom: '10px',\n    },\n    '&  div': {\n      // border: \"1px solid white\",\n      display: ' inline-block',\n      padding: '10px',\n      borderRadius: '5px',\n      marginTop: '20px',\n      color: '#fafafa',\n      fontWeight: '600',\n    },\n  },\n\n  boxheading1: {\n    display: ' inline-block',\n    padding: '10px',\n    borderRadius: '5px',\n    marginTop: '20px',\n    color: '#fafafa',\n    fontWeight: '600',\n  },\n\n  dialoginputbox: {\n    width: '393px',\n    height: '35px',\n    border: '2px solid #00ffff',\n    paddingLeft: '10px',\n    backgroundColor: 'rgb(235 235 235)',\n    borderRadius: '8px',\n    '@media (max-width: 900px)': {\n      width: '291px',\n    },\n  },\n\n  deatailimage: {\n    width: '100%',\n    height: '50vh',\n    display: 'flex',\n    padding: '50px 0',\n    overflow: 'hidden',\n    position: 'relative',\n    background: 'rgba(12, 12, 13, 0.91)',\n    textAlign: 'center',\n    justifyContent: 'center',\n    [theme.breakpoints.down('sm')]: {\n      height: 'auto',\n    },\n    '& img': {\n      filter: ' drop-shadow(rgba(0, 0, 0, 0.25) 0px 20px 20px)',\n      maxHeight: '100%',\n      borderRadius: '10px',\n      maxWidth: '100%',\n    },\n  },\n}))\nfunction Gallery(props) {\n  const { account, library, chainId } = useWeb3React()\n  const [open, setOpen] = React.useState(false)\n  const classes = useStyles()\n  const [nftDetails, setnftDetails] = useState()\n  const user = useContext(UserContext)\n  const [isLoading, setIsLoading] = useState(false)\n  const [ownerOf, setOwnerOf] = useState('')\n  const location = useLocation()\n  const [isUpdate, setIsUpdate] = useState(false)\n  const [transferAddress, setTransferAddress] = useState('')\n  const handleClose = () => {\n    setOpen(false)\n  }\n  const getDetails = async (id) => {\n    setIsLoading(true)\n    try {\n      const contract = await getWeb3ContractObject(RezwanPodABI, mintAddress)\n\n      const ownerOf_L = await contract.methods.ownerOf(id.toString()).call()\n      setOwnerOf(ownerOf_L)\n\n      const filter = await contract.methods.tokenURI(id.toString()).call()\n      const res = await axios.get(filter)\n\n      if (res.status === 200) {\n        setnftDetails({ id: id.toString(), nfdData: res.data })\n        console.log(' res.data', res.data)\n        setIsLoading(false)\n      }\n    } catch (error) {\n      console.log('ERROR', error)\n      setIsLoading(false)\n    }\n  }\n  const transferFromHandler = async () => {\n    if (chainId === ACTIVE_NETWORK) {\n      if (transferAddress && transferAddress !== '') {\n        const web3 = await getWeb3Obj()\n        const dataRes = web3.utils.isAddress(transferAddress)\n        if (dataRes) {\n          try {\n            setIsUpdate(true)\n            const contract = getContract(\n              mintAddress,\n              RezwanPodABI,\n              library,\n              account,\n            )\n\n            const res = await contract.transferFrom(\n              account,\n              transferAddress,\n              nftDetails.id,\n            )\n            await res.wait()\n            toast.success('Success')\n            setIsUpdate(false)\n            getDetails(nftDetails.id)\n            user.getCurrentMintingDetails()\n            handleClose()\n          } catch (error) {\n            setIsUpdate(false)\n\n            toast.error(error.message)\n            console.log('error', error)\n          }\n        } else {\n          toast.error('Please enter valid address')\n        }\n      } else {\n        toast.error('Please enter address')\n      }\n    } else {\n      swichNetworkHandler()\n    }\n  }\n  useEffect(() => {\n    if (location.search) {\n      const ids = location.search.split('?')\n      if (ids[1]) {\n        getDetails(ids[1])\n      }\n    }\n  }, [location])\n  return (\n    <Page title=\"The Defiants - Become part of our NFT revolution!\">\n      {/* <Box style={{\n        background:\"#180f07 \"}}> */}\n      {isLoading ? (\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          width=\"100%\"\n        >\n          <Typography variant=\"h3\" align=\"center\" style={{ color: '#ccc' }}>\n            Loading...\n          </Typography>\n          <ButtonCircularProgress />\n        </Box>\n      ) : (\n        <>\n          <Box className={classes.deatailimage}>\n            <img\n              src={\n                nftDetails?.nfdData?.image\n                  ? nftDetails?.nfdData.image\n                  : 'images/gallery/1.png'\n              }\n              alt=\"\"\n            />\n          </Box>\n          <Box className={classes.Padding_Top} mb={7}>\n            <Container maxWidth=\"lg\">\n              <Grid container spacing={3}>\n                <Grid item xs={12} md={6}>\n                  <Box className={classes.boxheading}>\n                    <Typography variant=\"h3\">\n                      #{nftDetails?.id ? nftDetails?.id : ''} -{' '}\n                      {nftDetails?.nfdData?.name\n                        ? nftDetails?.nfdData?.name\n                        : ''}{' '}\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      style={{ wordBreak: 'break-all', color: '#f0f0f0' }}\n                    >\n                      <strong>Owned by: </strong>\n                      {ownerOf ? ownerOf : ''}\n                    </Typography>\n\n                    {ownerOf &&\n                      account &&\n                      account.toLowerCase() === ownerOf.toLowerCase() && (\n                        <Box className={classes.boxheading1}>\n                          <Button\n                            style={{\n                              lineHeight: '25px',\n                              border: 'none',\n                              borderRadius: 'none',\n                            }}\n                            className={classes.filterbox}\n                            variant=\"contained\"\n                            size=\"large\"\n                            color=\"secondary\"\n                            onClick={(e) => setOpen(true)}\n                          >\n                            <span>TRANSFER</span>\n                          </Button>\n                        </Box>\n                      )}\n                  </Box>\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <Box className={classes.boxheading}>\n                    <Typography variant=\"h3\"> Traits </Typography>\n                    {nftDetails?.nfdData?.attributes.map((data, i) => {\n                      return (\n                        <Box className={classes.filterbox}>\n                          <label>\n                            {data?.trait_type ? data?.trait_type : ''}\n                          </label>\n                          <Typography variant=\"body1\">\n                            {data?.value ? data?.value : ''}\n                          </Typography>\n                        </Box>\n                      )\n                    })}\n                  </Box>\n                </Grid>\n              </Grid>\n\n              <Dialog\n                style={{ background: 'rgb(12 12 13 / 40%)' }}\n                open={open}\n                // onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n              >\n                <DialogTitle id=\"alert-dialog-title\">\n                  {/* {\"Use Google's location service?\"} */}\n                  {/* {\"Connect Your Wallet?\"} */}\n                </DialogTitle>\n                <DialogContent>\n                  <DialogContentText\n                    id=\"alert-dialog-description\"\n                    style={{ maxWidth: '450px' }}\n                  >\n                    <label style={{ color: '#000' }} for=\"fname\">\n                      User Wallet Address{' '}\n                    </label>\n\n                    <input\n                      className={classes.dialoginputbox}\n                      type=\"text\"\n                      placeholder=\"0xx0000\"\n                      value={transferAddress}\n                      disabled={isUpdate}\n                      onChange={(e) => setTransferAddress(e.target.value)}\n                    />\n                  </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                  <Button\n                    style={{ color: '#000' }}\n                    onClick={handleClose}\n                    autoFocus\n                    disabled={isUpdate}\n                  >\n                    Cancel\n                  </Button>\n\n                  <Button\n                    onClick={transferFromHandler}\n                    autoFocus\n                    disabled={isUpdate || transferAddress === ''}\n                  >\n                    Transfer {isUpdate && <ButtonCircularProgress />}\n                  </Button>\n                </DialogActions>\n              </Dialog>\n            </Container>\n          </Box>\n        </>\n      )}\n\n      {/* </Box> */}\n    </Page>\n  )\n}\nexport default Gallery\n"],"sourceRoot":""}