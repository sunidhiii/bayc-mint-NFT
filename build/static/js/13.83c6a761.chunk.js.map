{"version":3,"sources":["component/NFTCard.js","views/pages/Home/Corosel.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","views/pages/Header/WhyUs.js"],"names":["useStyles","makeStyles","theme","memberBox","textAlign","width","MemberCard","data","index","classes","Box","className","key","src","image","alt","bannerBox","padding","collectionCardData","no","Corosel","Container","Grid","container","spacing","dots","slidesToShow","slidesToScroll","arrows","autoplay","autoplaySpeed","infinite","responsive","breakpoint","settings","centerMode","centerPadding","style","map","i","item","lg","sm","xs","md","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","React","props","ref","_props$align","align","_props$color","color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","root","concat","capitalize","withStyles","margin","typography","caption","button","overline","srOnly","position","height","overflow","alignLeft","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name","headingBox","marginTop","parentBox","minHeight","bulletPoints","WhyUs"],"mappings":"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","file":"static/js/13.83c6a761.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n} from '@material-ui/core'\r\nconst useStyles = makeStyles((theme) => ({\r\n  memberBox: {\r\n    textAlign: 'center',\r\n    width: '100%',\r\n    '& img': {\r\n      width: '90%',\r\n    },\r\n  },\r\n}))\r\nexport default function MemberCard({ data, index }) {\r\n  const classes = useStyles()\r\n  return (\r\n    <Box className={classes.memberBox} key={index}>\r\n      <img src={data?.image} alt=\"\" />\r\n    </Box>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n  withStyles,\r\n  TextField,\r\n} from '@material-ui/core'\r\nimport Slider from 'react-slick'\r\nimport {} from 'react-feather'\r\nimport NFTCard from 'src/component/NFTCard'\r\nconst useStyles = makeStyles((theme) => ({\r\n  bannerBox: {\r\n    padding: '80px 0px',\r\n  },\r\n}))\r\nconst collectionCardData = [\r\n  {\r\n    no: 1,\r\n    image: '/images/carasel/15.png',\r\n  },\r\n  {\r\n    no: 2,\r\n    image: '/images/carasel/58.png',\r\n  },\r\n  {\r\n    no: 3,\r\n    image: '/images/carasel/66.png',\r\n  },\r\n  {\r\n    no: 4,\r\n    image: '/images/carasel/73.png',\r\n  },\r\n  {\r\n    no: 5,\r\n    image: '/images/carasel/86.png',\r\n  },\r\n  {\r\n    no: 6,\r\n    image: '/images/carasel/145.png',\r\n  },\r\n  {\r\n    no: 7,\r\n    image: '/images/carasel/170.png',\r\n  },\r\n  {\r\n    no: 8,\r\n    image: '/images/carasel/214.png',\r\n  },\r\n  {\r\n    no: 9,\r\n    image: '/images/carasel/215.png',\r\n  },\r\n  {\r\n    no: 10,\r\n    image: '/images/carasel/229.png',\r\n  },\r\n]\r\nexport default function Corosel() {\r\n  const classes = useStyles()\r\n  const settings = {\r\n    dots: true,\r\n    slidesToShow: 5,\r\n    slidesToScroll: 1,\r\n    arrows: false,\r\n    className: 'recomended',\r\n    autoplay: true,\r\n    autoplaySpeed: 1500,\r\n    infinite: true,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1025,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          centerMode: true,\r\n          centerPadding: '20px',\r\n          autoplay: true,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 800,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          centerMode: true,\r\n          centerPadding: '20px',\r\n          autoplay: true,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 450,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          centerMode: true,\r\n          centerPadding: '20px',\r\n          autoplay: true,\r\n        },\r\n      },\r\n    ],\r\n  }\r\n  return (\r\n    <Box className={classes.bannerBox}>\r\n      <Container>\r\n        <Grid container spacing={4} width=\"100%\">\r\n          <Slider\r\n            {...settings}\r\n            // className=\"roadmapslider\"\r\n            style={{ width: '100%' }}\r\n          >\r\n            {collectionCardData.map((data, i) => {\r\n              return (\r\n                <Grid\r\n                  item\r\n                  lg={12}\r\n                  sm={12}\r\n                  xs={12}\r\n                  md={12}\r\n                  key={i}\r\n                  className=\"walletSet\"\r\n                >\r\n                  <NFTCard data={data} index={i} />\r\n                </Grid>\r\n              )\r\n            })}\r\n          </Slider>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  )\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import React from 'react'\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n} from '@material-ui/core'\r\nimport Corosel from '../Home/Corosel'\r\nconst useStyles = makeStyles((theme) => ({\r\n  headingBox: {\r\n    textAlign: 'center',\r\n    '& h2': {\r\n      // fontWeight: '900',\r\n    },\r\n    '& h3': {\r\n      // fontWeight: '600',\r\n      marginTop: '20px',\r\n    },\r\n  },\r\n  parentBox: {\r\n    padding: '20px 0px',\r\n    minHeight: '600px',\r\n    color: '#fff',\r\n  },\r\n  bulletPoints: {\r\n    textAlign: 'left !important',\r\n    marginTop: '25px',\r\n  },\r\n}))\r\nexport default function WhyUs() {\r\n  const classes = useStyles()\r\n  return (\r\n    <Box className={classes.parentBox}>\r\n      <Container>\r\n        <Box>\r\n          <Box className={classes.headingBox}>\r\n            <Typography variant=\"h2\">WHY US?</Typography>\r\n            <Typography variant=\"h3\">\r\n              {' '}\r\n              Why own a MoonriverBAYC ape?\r\n              <br /> Here are some reasons.\r\n            </Typography>\r\n            <Box className={classes.bulletPoints}>\r\n              <ul>\r\n                <li>\r\n                  <Typography variant=\"h4\">\r\n                    Comic book features names after holders\r\n                  </Typography>\r\n                </li>\r\n                <li>\r\n                  <Typography variant=\"h4\">\r\n                    Exclusive airdrops for holders\r\n                  </Typography>\r\n                </li>\r\n                <li>\r\n                  <Typography variant=\"h4\">\r\n                    Exclusive ownership of the 1st Derivative ape project on\r\n                    Moonriver and access to exclusive chat channels\r\n                  </Typography>\r\n                </li>\r\n                <li>\r\n                  <Typography variant=\"h4\">\r\n                    {' '}\r\n                    Ticket to the biggest yacht party on the blockchain\r\n                  </Typography>\r\n                </li>\r\n                <li>\r\n                  <Typography variant=\"h4\">\r\n                    {' '}\r\n                    Earn MOVR, Revenue shares from minting redistributed to\r\n                    holders\r\n                  </Typography>\r\n                </li>\r\n                <li>\r\n                  {' '}\r\n                  <Typography variant=\"h4\"> Be a part of history</Typography>\r\n                </li>\r\n              </ul>\r\n            </Box>\r\n          </Box>\r\n          <Corosel />\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  )\r\n}\r\n"],"sourceRoot":""}